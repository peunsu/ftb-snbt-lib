
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'BOOL BYTE COLON COMMA DOUBLE INTEGER LBRACE LBRACKET LONG NAME RBRACE RBRACKET SEMICOLON SHORT STRINGsnbt : compoundcompound : LBRACE key_value_pairs RBRACE\n                | LBRACE RBRACEkey_value_pairs : key_value_pairs key_value_pair\n                       | key_value_pairs COMMA key_value_pair\n                       | key_value_pairkey_value_pair : NAME COLON value\n                      | STRING COLON valuevalue : compound\n                | list\n                | array\n                | BOOL\n                | BYTE\n                | SHORT\n                | DOUBLE\n                | LONG\n                | INTEGER\n                | STRINGlist : LBRACKET values RBRACKET\n                | LBRACKET RBRACKETarray : LBRACKET NAME SEMICOLON values RBRACKET\n                | LBRACKET NAME SEMICOLON RBRACKETvalues : values value\n              | values COMMA value\n              | value'
    
_lr_action_items = {'LBRACE':([0,5,9,12,13,16,17,18,19,20,21,22,23,24,25,26,28,29,31,32,33,34,35,36,37,38,39,],[3,-3,-2,3,3,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,3,3,-20,-25,-19,-23,3,3,-24,3,-22,-21,]),'$end':([1,2,5,9,],[0,-1,-3,-2,]),'RBRACE':([3,4,5,6,9,10,14,15,16,17,18,19,20,21,22,23,24,25,27,29,32,38,39,],[5,9,-3,-6,-2,-4,-5,-7,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-8,-20,-19,-22,-21,]),'NAME':([3,4,5,6,9,10,11,14,15,16,17,18,19,20,21,22,23,24,25,26,27,29,32,38,39,],[7,7,-3,-6,-2,-4,7,-5,-7,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,30,-8,-20,-19,-22,-21,]),'STRING':([3,4,5,6,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,31,32,33,34,35,36,37,38,39,],[8,8,-3,-6,-2,-4,8,25,25,-5,-7,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,25,-8,25,-20,-25,-19,-23,25,25,-24,25,-22,-21,]),'COMMA':([4,5,6,9,10,14,15,16,17,18,19,20,21,22,23,24,25,27,28,29,31,32,33,36,37,38,39,],[11,-3,-6,-2,-4,-5,-7,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-8,34,-20,-25,-19,-23,-24,34,-22,-21,]),'RBRACKET':([5,9,16,17,18,19,20,21,22,23,24,25,26,28,29,31,32,33,35,36,37,38,39,],[-3,-2,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,29,32,-20,-25,-19,-23,38,-24,39,-22,-21,]),'BOOL':([5,9,12,13,16,17,18,19,20,21,22,23,24,25,26,28,29,31,32,33,34,35,36,37,38,39,],[-3,-2,19,19,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,19,19,-20,-25,-19,-23,19,19,-24,19,-22,-21,]),'BYTE':([5,9,12,13,16,17,18,19,20,21,22,23,24,25,26,28,29,31,32,33,34,35,36,37,38,39,],[-3,-2,20,20,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,20,20,-20,-25,-19,-23,20,20,-24,20,-22,-21,]),'SHORT':([5,9,12,13,16,17,18,19,20,21,22,23,24,25,26,28,29,31,32,33,34,35,36,37,38,39,],[-3,-2,21,21,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,21,21,-20,-25,-19,-23,21,21,-24,21,-22,-21,]),'DOUBLE':([5,9,12,13,16,17,18,19,20,21,22,23,24,25,26,28,29,31,32,33,34,35,36,37,38,39,],[-3,-2,22,22,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,22,22,-20,-25,-19,-23,22,22,-24,22,-22,-21,]),'LONG':([5,9,12,13,16,17,18,19,20,21,22,23,24,25,26,28,29,31,32,33,34,35,36,37,38,39,],[-3,-2,23,23,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,23,23,-20,-25,-19,-23,23,23,-24,23,-22,-21,]),'INTEGER':([5,9,12,13,16,17,18,19,20,21,22,23,24,25,26,28,29,31,32,33,34,35,36,37,38,39,],[-3,-2,24,24,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,24,24,-20,-25,-19,-23,24,24,-24,24,-22,-21,]),'LBRACKET':([5,9,12,13,16,17,18,19,20,21,22,23,24,25,26,28,29,31,32,33,34,35,36,37,38,39,],[-3,-2,26,26,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,26,26,-20,-25,-19,-23,26,26,-24,26,-22,-21,]),'COLON':([7,8,],[12,13,]),'SEMICOLON':([30,],[35,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'snbt':([0,],[1,]),'compound':([0,12,13,26,28,34,35,37,],[2,16,16,16,16,16,16,16,]),'key_value_pairs':([3,],[4,]),'key_value_pair':([3,4,11,],[6,10,14,]),'value':([12,13,26,28,34,35,37,],[15,27,31,33,36,31,33,]),'list':([12,13,26,28,34,35,37,],[17,17,17,17,17,17,17,]),'array':([12,13,26,28,34,35,37,],[18,18,18,18,18,18,18,]),'values':([26,35,],[28,37,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> snbt","S'",1,None,None,None),
  ('snbt -> compound','snbt',1,'p_snbt','parse.py',8),
  ('compound -> LBRACE key_value_pairs RBRACE','compound',3,'p_compound','parse.py',12),
  ('compound -> LBRACE RBRACE','compound',2,'p_compound','parse.py',13),
  ('key_value_pairs -> key_value_pairs key_value_pair','key_value_pairs',2,'p_key_value_pairs','parse.py',20),
  ('key_value_pairs -> key_value_pairs COMMA key_value_pair','key_value_pairs',3,'p_key_value_pairs','parse.py',21),
  ('key_value_pairs -> key_value_pair','key_value_pairs',1,'p_key_value_pairs','parse.py',22),
  ('key_value_pair -> NAME COLON value','key_value_pair',3,'p_key_value_pair','parse.py',31),
  ('key_value_pair -> STRING COLON value','key_value_pair',3,'p_key_value_pair','parse.py',32),
  ('value -> compound','value',1,'p_value','parse.py',36),
  ('value -> list','value',1,'p_value','parse.py',37),
  ('value -> array','value',1,'p_value','parse.py',38),
  ('value -> BOOL','value',1,'p_value','parse.py',39),
  ('value -> BYTE','value',1,'p_value','parse.py',40),
  ('value -> SHORT','value',1,'p_value','parse.py',41),
  ('value -> DOUBLE','value',1,'p_value','parse.py',42),
  ('value -> LONG','value',1,'p_value','parse.py',43),
  ('value -> INTEGER','value',1,'p_value','parse.py',44),
  ('value -> STRING','value',1,'p_value','parse.py',45),
  ('list -> LBRACKET values RBRACKET','list',3,'p_list','parse.py',49),
  ('list -> LBRACKET RBRACKET','list',2,'p_list','parse.py',50),
  ('array -> LBRACKET NAME SEMICOLON values RBRACKET','array',5,'p_array','parse.py',57),
  ('array -> LBRACKET NAME SEMICOLON RBRACKET','array',4,'p_array','parse.py',58),
  ('values -> values value','values',2,'p_values','parse.py',65),
  ('values -> values COMMA value','values',3,'p_values','parse.py',66),
  ('values -> value','values',1,'p_values','parse.py',67),
]
