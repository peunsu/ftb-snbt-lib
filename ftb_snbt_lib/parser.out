Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> snbt
Rule 1     snbt -> compound
Rule 2     compound -> LBRACE key_value_pairs RBRACE
Rule 3     compound -> LBRACE RBRACE
Rule 4     key_value_pairs -> key_value_pairs key_value_pair
Rule 5     key_value_pairs -> key_value_pairs COMMA key_value_pair
Rule 6     key_value_pairs -> key_value_pair
Rule 7     key_value_pair -> NAME COLON value
Rule 8     key_value_pair -> STRING COLON value
Rule 9     value -> compound
Rule 10    value -> list
Rule 11    value -> array
Rule 12    value -> BOOL
Rule 13    value -> BYTE
Rule 14    value -> SHORT
Rule 15    value -> FLOAT
Rule 16    value -> DOUBLE
Rule 17    value -> LONG
Rule 18    value -> INTEGER
Rule 19    value -> STRING
Rule 20    list -> LBRACKET values RBRACKET
Rule 21    list -> LBRACKET RBRACKET
Rule 22    array -> LBRACKET TYPE SEMICOLON values RBRACKET
Rule 23    array -> LBRACKET TYPE SEMICOLON RBRACKET
Rule 24    values -> values value
Rule 25    values -> values COMMA value
Rule 26    values -> value

Terminals, with rules where they appear

BOOL                 : 12
BYTE                 : 13
COLON                : 7 8
COMMA                : 5 25
DOUBLE               : 16
FLOAT                : 15
INTEGER              : 18
LBRACE               : 2 3
LBRACKET             : 20 21 22 23
LONG                 : 17
NAME                 : 7
RBRACE               : 2 3
RBRACKET             : 20 21 22 23
SEMICOLON            : 22 23
SHORT                : 14
STRING               : 8 19
TYPE                 : 22 23
error                : 

Nonterminals, with rules where they appear

array                : 11
compound             : 1 9
key_value_pair       : 4 5 6
key_value_pairs      : 2 4 5
list                 : 10
snbt                 : 0
value                : 7 8 24 25 26
values               : 20 22 24 25

Parsing method: LALR

state 0

    (0) S' -> . snbt
    (1) snbt -> . compound
    (2) compound -> . LBRACE key_value_pairs RBRACE
    (3) compound -> . LBRACE RBRACE

    LBRACE          shift and go to state 3

    snbt                           shift and go to state 1
    compound                       shift and go to state 2

state 1

    (0) S' -> snbt .



state 2

    (1) snbt -> compound .

    $end            reduce using rule 1 (snbt -> compound .)


state 3

    (2) compound -> LBRACE . key_value_pairs RBRACE
    (3) compound -> LBRACE . RBRACE
    (4) key_value_pairs -> . key_value_pairs key_value_pair
    (5) key_value_pairs -> . key_value_pairs COMMA key_value_pair
    (6) key_value_pairs -> . key_value_pair
    (7) key_value_pair -> . NAME COLON value
    (8) key_value_pair -> . STRING COLON value

    RBRACE          shift and go to state 5
    NAME            shift and go to state 7
    STRING          shift and go to state 8

    key_value_pairs                shift and go to state 4
    key_value_pair                 shift and go to state 6

state 4

    (2) compound -> LBRACE key_value_pairs . RBRACE
    (4) key_value_pairs -> key_value_pairs . key_value_pair
    (5) key_value_pairs -> key_value_pairs . COMMA key_value_pair
    (7) key_value_pair -> . NAME COLON value
    (8) key_value_pair -> . STRING COLON value

    RBRACE          shift and go to state 9
    COMMA           shift and go to state 11
    NAME            shift and go to state 7
    STRING          shift and go to state 8

    key_value_pair                 shift and go to state 10

state 5

    (3) compound -> LBRACE RBRACE .

    $end            reduce using rule 3 (compound -> LBRACE RBRACE .)
    RBRACE          reduce using rule 3 (compound -> LBRACE RBRACE .)
    COMMA           reduce using rule 3 (compound -> LBRACE RBRACE .)
    NAME            reduce using rule 3 (compound -> LBRACE RBRACE .)
    STRING          reduce using rule 3 (compound -> LBRACE RBRACE .)
    RBRACKET        reduce using rule 3 (compound -> LBRACE RBRACE .)
    BOOL            reduce using rule 3 (compound -> LBRACE RBRACE .)
    BYTE            reduce using rule 3 (compound -> LBRACE RBRACE .)
    SHORT           reduce using rule 3 (compound -> LBRACE RBRACE .)
    FLOAT           reduce using rule 3 (compound -> LBRACE RBRACE .)
    DOUBLE          reduce using rule 3 (compound -> LBRACE RBRACE .)
    LONG            reduce using rule 3 (compound -> LBRACE RBRACE .)
    INTEGER         reduce using rule 3 (compound -> LBRACE RBRACE .)
    LBRACE          reduce using rule 3 (compound -> LBRACE RBRACE .)
    LBRACKET        reduce using rule 3 (compound -> LBRACE RBRACE .)


state 6

    (6) key_value_pairs -> key_value_pair .

    RBRACE          reduce using rule 6 (key_value_pairs -> key_value_pair .)
    COMMA           reduce using rule 6 (key_value_pairs -> key_value_pair .)
    NAME            reduce using rule 6 (key_value_pairs -> key_value_pair .)
    STRING          reduce using rule 6 (key_value_pairs -> key_value_pair .)


state 7

    (7) key_value_pair -> NAME . COLON value

    COLON           shift and go to state 12


state 8

    (8) key_value_pair -> STRING . COLON value

    COLON           shift and go to state 13


state 9

    (2) compound -> LBRACE key_value_pairs RBRACE .

    $end            reduce using rule 2 (compound -> LBRACE key_value_pairs RBRACE .)
    RBRACE          reduce using rule 2 (compound -> LBRACE key_value_pairs RBRACE .)
    COMMA           reduce using rule 2 (compound -> LBRACE key_value_pairs RBRACE .)
    NAME            reduce using rule 2 (compound -> LBRACE key_value_pairs RBRACE .)
    STRING          reduce using rule 2 (compound -> LBRACE key_value_pairs RBRACE .)
    RBRACKET        reduce using rule 2 (compound -> LBRACE key_value_pairs RBRACE .)
    BOOL            reduce using rule 2 (compound -> LBRACE key_value_pairs RBRACE .)
    BYTE            reduce using rule 2 (compound -> LBRACE key_value_pairs RBRACE .)
    SHORT           reduce using rule 2 (compound -> LBRACE key_value_pairs RBRACE .)
    FLOAT           reduce using rule 2 (compound -> LBRACE key_value_pairs RBRACE .)
    DOUBLE          reduce using rule 2 (compound -> LBRACE key_value_pairs RBRACE .)
    LONG            reduce using rule 2 (compound -> LBRACE key_value_pairs RBRACE .)
    INTEGER         reduce using rule 2 (compound -> LBRACE key_value_pairs RBRACE .)
    LBRACE          reduce using rule 2 (compound -> LBRACE key_value_pairs RBRACE .)
    LBRACKET        reduce using rule 2 (compound -> LBRACE key_value_pairs RBRACE .)


state 10

    (4) key_value_pairs -> key_value_pairs key_value_pair .

    RBRACE          reduce using rule 4 (key_value_pairs -> key_value_pairs key_value_pair .)
    COMMA           reduce using rule 4 (key_value_pairs -> key_value_pairs key_value_pair .)
    NAME            reduce using rule 4 (key_value_pairs -> key_value_pairs key_value_pair .)
    STRING          reduce using rule 4 (key_value_pairs -> key_value_pairs key_value_pair .)


state 11

    (5) key_value_pairs -> key_value_pairs COMMA . key_value_pair
    (7) key_value_pair -> . NAME COLON value
    (8) key_value_pair -> . STRING COLON value

    NAME            shift and go to state 7
    STRING          shift and go to state 8

    key_value_pair                 shift and go to state 14

state 12

    (7) key_value_pair -> NAME COLON . value
    (9) value -> . compound
    (10) value -> . list
    (11) value -> . array
    (12) value -> . BOOL
    (13) value -> . BYTE
    (14) value -> . SHORT
    (15) value -> . FLOAT
    (16) value -> . DOUBLE
    (17) value -> . LONG
    (18) value -> . INTEGER
    (19) value -> . STRING
    (2) compound -> . LBRACE key_value_pairs RBRACE
    (3) compound -> . LBRACE RBRACE
    (20) list -> . LBRACKET values RBRACKET
    (21) list -> . LBRACKET RBRACKET
    (22) array -> . LBRACKET TYPE SEMICOLON values RBRACKET
    (23) array -> . LBRACKET TYPE SEMICOLON RBRACKET

    BOOL            shift and go to state 19
    BYTE            shift and go to state 20
    SHORT           shift and go to state 21
    FLOAT           shift and go to state 22
    DOUBLE          shift and go to state 23
    LONG            shift and go to state 24
    INTEGER         shift and go to state 25
    STRING          shift and go to state 26
    LBRACE          shift and go to state 3
    LBRACKET        shift and go to state 27

    value                          shift and go to state 15
    compound                       shift and go to state 16
    list                           shift and go to state 17
    array                          shift and go to state 18

state 13

    (8) key_value_pair -> STRING COLON . value
    (9) value -> . compound
    (10) value -> . list
    (11) value -> . array
    (12) value -> . BOOL
    (13) value -> . BYTE
    (14) value -> . SHORT
    (15) value -> . FLOAT
    (16) value -> . DOUBLE
    (17) value -> . LONG
    (18) value -> . INTEGER
    (19) value -> . STRING
    (2) compound -> . LBRACE key_value_pairs RBRACE
    (3) compound -> . LBRACE RBRACE
    (20) list -> . LBRACKET values RBRACKET
    (21) list -> . LBRACKET RBRACKET
    (22) array -> . LBRACKET TYPE SEMICOLON values RBRACKET
    (23) array -> . LBRACKET TYPE SEMICOLON RBRACKET

    BOOL            shift and go to state 19
    BYTE            shift and go to state 20
    SHORT           shift and go to state 21
    FLOAT           shift and go to state 22
    DOUBLE          shift and go to state 23
    LONG            shift and go to state 24
    INTEGER         shift and go to state 25
    STRING          shift and go to state 26
    LBRACE          shift and go to state 3
    LBRACKET        shift and go to state 27

    value                          shift and go to state 28
    compound                       shift and go to state 16
    list                           shift and go to state 17
    array                          shift and go to state 18

state 14

    (5) key_value_pairs -> key_value_pairs COMMA key_value_pair .

    RBRACE          reduce using rule 5 (key_value_pairs -> key_value_pairs COMMA key_value_pair .)
    COMMA           reduce using rule 5 (key_value_pairs -> key_value_pairs COMMA key_value_pair .)
    NAME            reduce using rule 5 (key_value_pairs -> key_value_pairs COMMA key_value_pair .)
    STRING          reduce using rule 5 (key_value_pairs -> key_value_pairs COMMA key_value_pair .)


state 15

    (7) key_value_pair -> NAME COLON value .

    RBRACE          reduce using rule 7 (key_value_pair -> NAME COLON value .)
    COMMA           reduce using rule 7 (key_value_pair -> NAME COLON value .)
    NAME            reduce using rule 7 (key_value_pair -> NAME COLON value .)
    STRING          reduce using rule 7 (key_value_pair -> NAME COLON value .)


state 16

    (9) value -> compound .

    RBRACE          reduce using rule 9 (value -> compound .)
    COMMA           reduce using rule 9 (value -> compound .)
    NAME            reduce using rule 9 (value -> compound .)
    STRING          reduce using rule 9 (value -> compound .)
    RBRACKET        reduce using rule 9 (value -> compound .)
    BOOL            reduce using rule 9 (value -> compound .)
    BYTE            reduce using rule 9 (value -> compound .)
    SHORT           reduce using rule 9 (value -> compound .)
    FLOAT           reduce using rule 9 (value -> compound .)
    DOUBLE          reduce using rule 9 (value -> compound .)
    LONG            reduce using rule 9 (value -> compound .)
    INTEGER         reduce using rule 9 (value -> compound .)
    LBRACE          reduce using rule 9 (value -> compound .)
    LBRACKET        reduce using rule 9 (value -> compound .)


state 17

    (10) value -> list .

    RBRACE          reduce using rule 10 (value -> list .)
    COMMA           reduce using rule 10 (value -> list .)
    NAME            reduce using rule 10 (value -> list .)
    STRING          reduce using rule 10 (value -> list .)
    RBRACKET        reduce using rule 10 (value -> list .)
    BOOL            reduce using rule 10 (value -> list .)
    BYTE            reduce using rule 10 (value -> list .)
    SHORT           reduce using rule 10 (value -> list .)
    FLOAT           reduce using rule 10 (value -> list .)
    DOUBLE          reduce using rule 10 (value -> list .)
    LONG            reduce using rule 10 (value -> list .)
    INTEGER         reduce using rule 10 (value -> list .)
    LBRACE          reduce using rule 10 (value -> list .)
    LBRACKET        reduce using rule 10 (value -> list .)


state 18

    (11) value -> array .

    RBRACE          reduce using rule 11 (value -> array .)
    COMMA           reduce using rule 11 (value -> array .)
    NAME            reduce using rule 11 (value -> array .)
    STRING          reduce using rule 11 (value -> array .)
    RBRACKET        reduce using rule 11 (value -> array .)
    BOOL            reduce using rule 11 (value -> array .)
    BYTE            reduce using rule 11 (value -> array .)
    SHORT           reduce using rule 11 (value -> array .)
    FLOAT           reduce using rule 11 (value -> array .)
    DOUBLE          reduce using rule 11 (value -> array .)
    LONG            reduce using rule 11 (value -> array .)
    INTEGER         reduce using rule 11 (value -> array .)
    LBRACE          reduce using rule 11 (value -> array .)
    LBRACKET        reduce using rule 11 (value -> array .)


state 19

    (12) value -> BOOL .

    RBRACE          reduce using rule 12 (value -> BOOL .)
    COMMA           reduce using rule 12 (value -> BOOL .)
    NAME            reduce using rule 12 (value -> BOOL .)
    STRING          reduce using rule 12 (value -> BOOL .)
    RBRACKET        reduce using rule 12 (value -> BOOL .)
    BOOL            reduce using rule 12 (value -> BOOL .)
    BYTE            reduce using rule 12 (value -> BOOL .)
    SHORT           reduce using rule 12 (value -> BOOL .)
    FLOAT           reduce using rule 12 (value -> BOOL .)
    DOUBLE          reduce using rule 12 (value -> BOOL .)
    LONG            reduce using rule 12 (value -> BOOL .)
    INTEGER         reduce using rule 12 (value -> BOOL .)
    LBRACE          reduce using rule 12 (value -> BOOL .)
    LBRACKET        reduce using rule 12 (value -> BOOL .)


state 20

    (13) value -> BYTE .

    RBRACE          reduce using rule 13 (value -> BYTE .)
    COMMA           reduce using rule 13 (value -> BYTE .)
    NAME            reduce using rule 13 (value -> BYTE .)
    STRING          reduce using rule 13 (value -> BYTE .)
    RBRACKET        reduce using rule 13 (value -> BYTE .)
    BOOL            reduce using rule 13 (value -> BYTE .)
    BYTE            reduce using rule 13 (value -> BYTE .)
    SHORT           reduce using rule 13 (value -> BYTE .)
    FLOAT           reduce using rule 13 (value -> BYTE .)
    DOUBLE          reduce using rule 13 (value -> BYTE .)
    LONG            reduce using rule 13 (value -> BYTE .)
    INTEGER         reduce using rule 13 (value -> BYTE .)
    LBRACE          reduce using rule 13 (value -> BYTE .)
    LBRACKET        reduce using rule 13 (value -> BYTE .)


state 21

    (14) value -> SHORT .

    RBRACE          reduce using rule 14 (value -> SHORT .)
    COMMA           reduce using rule 14 (value -> SHORT .)
    NAME            reduce using rule 14 (value -> SHORT .)
    STRING          reduce using rule 14 (value -> SHORT .)
    RBRACKET        reduce using rule 14 (value -> SHORT .)
    BOOL            reduce using rule 14 (value -> SHORT .)
    BYTE            reduce using rule 14 (value -> SHORT .)
    SHORT           reduce using rule 14 (value -> SHORT .)
    FLOAT           reduce using rule 14 (value -> SHORT .)
    DOUBLE          reduce using rule 14 (value -> SHORT .)
    LONG            reduce using rule 14 (value -> SHORT .)
    INTEGER         reduce using rule 14 (value -> SHORT .)
    LBRACE          reduce using rule 14 (value -> SHORT .)
    LBRACKET        reduce using rule 14 (value -> SHORT .)


state 22

    (15) value -> FLOAT .

    RBRACE          reduce using rule 15 (value -> FLOAT .)
    COMMA           reduce using rule 15 (value -> FLOAT .)
    NAME            reduce using rule 15 (value -> FLOAT .)
    STRING          reduce using rule 15 (value -> FLOAT .)
    RBRACKET        reduce using rule 15 (value -> FLOAT .)
    BOOL            reduce using rule 15 (value -> FLOAT .)
    BYTE            reduce using rule 15 (value -> FLOAT .)
    SHORT           reduce using rule 15 (value -> FLOAT .)
    FLOAT           reduce using rule 15 (value -> FLOAT .)
    DOUBLE          reduce using rule 15 (value -> FLOAT .)
    LONG            reduce using rule 15 (value -> FLOAT .)
    INTEGER         reduce using rule 15 (value -> FLOAT .)
    LBRACE          reduce using rule 15 (value -> FLOAT .)
    LBRACKET        reduce using rule 15 (value -> FLOAT .)


state 23

    (16) value -> DOUBLE .

    RBRACE          reduce using rule 16 (value -> DOUBLE .)
    COMMA           reduce using rule 16 (value -> DOUBLE .)
    NAME            reduce using rule 16 (value -> DOUBLE .)
    STRING          reduce using rule 16 (value -> DOUBLE .)
    RBRACKET        reduce using rule 16 (value -> DOUBLE .)
    BOOL            reduce using rule 16 (value -> DOUBLE .)
    BYTE            reduce using rule 16 (value -> DOUBLE .)
    SHORT           reduce using rule 16 (value -> DOUBLE .)
    FLOAT           reduce using rule 16 (value -> DOUBLE .)
    DOUBLE          reduce using rule 16 (value -> DOUBLE .)
    LONG            reduce using rule 16 (value -> DOUBLE .)
    INTEGER         reduce using rule 16 (value -> DOUBLE .)
    LBRACE          reduce using rule 16 (value -> DOUBLE .)
    LBRACKET        reduce using rule 16 (value -> DOUBLE .)


state 24

    (17) value -> LONG .

    RBRACE          reduce using rule 17 (value -> LONG .)
    COMMA           reduce using rule 17 (value -> LONG .)
    NAME            reduce using rule 17 (value -> LONG .)
    STRING          reduce using rule 17 (value -> LONG .)
    RBRACKET        reduce using rule 17 (value -> LONG .)
    BOOL            reduce using rule 17 (value -> LONG .)
    BYTE            reduce using rule 17 (value -> LONG .)
    SHORT           reduce using rule 17 (value -> LONG .)
    FLOAT           reduce using rule 17 (value -> LONG .)
    DOUBLE          reduce using rule 17 (value -> LONG .)
    LONG            reduce using rule 17 (value -> LONG .)
    INTEGER         reduce using rule 17 (value -> LONG .)
    LBRACE          reduce using rule 17 (value -> LONG .)
    LBRACKET        reduce using rule 17 (value -> LONG .)


state 25

    (18) value -> INTEGER .

    RBRACE          reduce using rule 18 (value -> INTEGER .)
    COMMA           reduce using rule 18 (value -> INTEGER .)
    NAME            reduce using rule 18 (value -> INTEGER .)
    STRING          reduce using rule 18 (value -> INTEGER .)
    RBRACKET        reduce using rule 18 (value -> INTEGER .)
    BOOL            reduce using rule 18 (value -> INTEGER .)
    BYTE            reduce using rule 18 (value -> INTEGER .)
    SHORT           reduce using rule 18 (value -> INTEGER .)
    FLOAT           reduce using rule 18 (value -> INTEGER .)
    DOUBLE          reduce using rule 18 (value -> INTEGER .)
    LONG            reduce using rule 18 (value -> INTEGER .)
    INTEGER         reduce using rule 18 (value -> INTEGER .)
    LBRACE          reduce using rule 18 (value -> INTEGER .)
    LBRACKET        reduce using rule 18 (value -> INTEGER .)


state 26

    (19) value -> STRING .

    RBRACE          reduce using rule 19 (value -> STRING .)
    COMMA           reduce using rule 19 (value -> STRING .)
    NAME            reduce using rule 19 (value -> STRING .)
    STRING          reduce using rule 19 (value -> STRING .)
    RBRACKET        reduce using rule 19 (value -> STRING .)
    BOOL            reduce using rule 19 (value -> STRING .)
    BYTE            reduce using rule 19 (value -> STRING .)
    SHORT           reduce using rule 19 (value -> STRING .)
    FLOAT           reduce using rule 19 (value -> STRING .)
    DOUBLE          reduce using rule 19 (value -> STRING .)
    LONG            reduce using rule 19 (value -> STRING .)
    INTEGER         reduce using rule 19 (value -> STRING .)
    LBRACE          reduce using rule 19 (value -> STRING .)
    LBRACKET        reduce using rule 19 (value -> STRING .)


state 27

    (20) list -> LBRACKET . values RBRACKET
    (21) list -> LBRACKET . RBRACKET
    (22) array -> LBRACKET . TYPE SEMICOLON values RBRACKET
    (23) array -> LBRACKET . TYPE SEMICOLON RBRACKET
    (24) values -> . values value
    (25) values -> . values COMMA value
    (26) values -> . value
    (9) value -> . compound
    (10) value -> . list
    (11) value -> . array
    (12) value -> . BOOL
    (13) value -> . BYTE
    (14) value -> . SHORT
    (15) value -> . FLOAT
    (16) value -> . DOUBLE
    (17) value -> . LONG
    (18) value -> . INTEGER
    (19) value -> . STRING
    (2) compound -> . LBRACE key_value_pairs RBRACE
    (3) compound -> . LBRACE RBRACE
    (20) list -> . LBRACKET values RBRACKET
    (21) list -> . LBRACKET RBRACKET
    (22) array -> . LBRACKET TYPE SEMICOLON values RBRACKET
    (23) array -> . LBRACKET TYPE SEMICOLON RBRACKET

    RBRACKET        shift and go to state 30
    TYPE            shift and go to state 31
    BOOL            shift and go to state 19
    BYTE            shift and go to state 20
    SHORT           shift and go to state 21
    FLOAT           shift and go to state 22
    DOUBLE          shift and go to state 23
    LONG            shift and go to state 24
    INTEGER         shift and go to state 25
    STRING          shift and go to state 26
    LBRACE          shift and go to state 3
    LBRACKET        shift and go to state 27

    values                         shift and go to state 29
    value                          shift and go to state 32
    compound                       shift and go to state 16
    list                           shift and go to state 17
    array                          shift and go to state 18

state 28

    (8) key_value_pair -> STRING COLON value .

    RBRACE          reduce using rule 8 (key_value_pair -> STRING COLON value .)
    COMMA           reduce using rule 8 (key_value_pair -> STRING COLON value .)
    NAME            reduce using rule 8 (key_value_pair -> STRING COLON value .)
    STRING          reduce using rule 8 (key_value_pair -> STRING COLON value .)


state 29

    (20) list -> LBRACKET values . RBRACKET
    (24) values -> values . value
    (25) values -> values . COMMA value
    (9) value -> . compound
    (10) value -> . list
    (11) value -> . array
    (12) value -> . BOOL
    (13) value -> . BYTE
    (14) value -> . SHORT
    (15) value -> . FLOAT
    (16) value -> . DOUBLE
    (17) value -> . LONG
    (18) value -> . INTEGER
    (19) value -> . STRING
    (2) compound -> . LBRACE key_value_pairs RBRACE
    (3) compound -> . LBRACE RBRACE
    (20) list -> . LBRACKET values RBRACKET
    (21) list -> . LBRACKET RBRACKET
    (22) array -> . LBRACKET TYPE SEMICOLON values RBRACKET
    (23) array -> . LBRACKET TYPE SEMICOLON RBRACKET

    RBRACKET        shift and go to state 33
    COMMA           shift and go to state 35
    BOOL            shift and go to state 19
    BYTE            shift and go to state 20
    SHORT           shift and go to state 21
    FLOAT           shift and go to state 22
    DOUBLE          shift and go to state 23
    LONG            shift and go to state 24
    INTEGER         shift and go to state 25
    STRING          shift and go to state 26
    LBRACE          shift and go to state 3
    LBRACKET        shift and go to state 27

    value                          shift and go to state 34
    compound                       shift and go to state 16
    list                           shift and go to state 17
    array                          shift and go to state 18

state 30

    (21) list -> LBRACKET RBRACKET .

    RBRACE          reduce using rule 21 (list -> LBRACKET RBRACKET .)
    COMMA           reduce using rule 21 (list -> LBRACKET RBRACKET .)
    NAME            reduce using rule 21 (list -> LBRACKET RBRACKET .)
    STRING          reduce using rule 21 (list -> LBRACKET RBRACKET .)
    RBRACKET        reduce using rule 21 (list -> LBRACKET RBRACKET .)
    BOOL            reduce using rule 21 (list -> LBRACKET RBRACKET .)
    BYTE            reduce using rule 21 (list -> LBRACKET RBRACKET .)
    SHORT           reduce using rule 21 (list -> LBRACKET RBRACKET .)
    FLOAT           reduce using rule 21 (list -> LBRACKET RBRACKET .)
    DOUBLE          reduce using rule 21 (list -> LBRACKET RBRACKET .)
    LONG            reduce using rule 21 (list -> LBRACKET RBRACKET .)
    INTEGER         reduce using rule 21 (list -> LBRACKET RBRACKET .)
    LBRACE          reduce using rule 21 (list -> LBRACKET RBRACKET .)
    LBRACKET        reduce using rule 21 (list -> LBRACKET RBRACKET .)


state 31

    (22) array -> LBRACKET TYPE . SEMICOLON values RBRACKET
    (23) array -> LBRACKET TYPE . SEMICOLON RBRACKET

    SEMICOLON       shift and go to state 36


state 32

    (26) values -> value .

    RBRACKET        reduce using rule 26 (values -> value .)
    COMMA           reduce using rule 26 (values -> value .)
    BOOL            reduce using rule 26 (values -> value .)
    BYTE            reduce using rule 26 (values -> value .)
    SHORT           reduce using rule 26 (values -> value .)
    FLOAT           reduce using rule 26 (values -> value .)
    DOUBLE          reduce using rule 26 (values -> value .)
    LONG            reduce using rule 26 (values -> value .)
    INTEGER         reduce using rule 26 (values -> value .)
    STRING          reduce using rule 26 (values -> value .)
    LBRACE          reduce using rule 26 (values -> value .)
    LBRACKET        reduce using rule 26 (values -> value .)


state 33

    (20) list -> LBRACKET values RBRACKET .

    RBRACE          reduce using rule 20 (list -> LBRACKET values RBRACKET .)
    COMMA           reduce using rule 20 (list -> LBRACKET values RBRACKET .)
    NAME            reduce using rule 20 (list -> LBRACKET values RBRACKET .)
    STRING          reduce using rule 20 (list -> LBRACKET values RBRACKET .)
    RBRACKET        reduce using rule 20 (list -> LBRACKET values RBRACKET .)
    BOOL            reduce using rule 20 (list -> LBRACKET values RBRACKET .)
    BYTE            reduce using rule 20 (list -> LBRACKET values RBRACKET .)
    SHORT           reduce using rule 20 (list -> LBRACKET values RBRACKET .)
    FLOAT           reduce using rule 20 (list -> LBRACKET values RBRACKET .)
    DOUBLE          reduce using rule 20 (list -> LBRACKET values RBRACKET .)
    LONG            reduce using rule 20 (list -> LBRACKET values RBRACKET .)
    INTEGER         reduce using rule 20 (list -> LBRACKET values RBRACKET .)
    LBRACE          reduce using rule 20 (list -> LBRACKET values RBRACKET .)
    LBRACKET        reduce using rule 20 (list -> LBRACKET values RBRACKET .)


state 34

    (24) values -> values value .

    RBRACKET        reduce using rule 24 (values -> values value .)
    COMMA           reduce using rule 24 (values -> values value .)
    BOOL            reduce using rule 24 (values -> values value .)
    BYTE            reduce using rule 24 (values -> values value .)
    SHORT           reduce using rule 24 (values -> values value .)
    FLOAT           reduce using rule 24 (values -> values value .)
    DOUBLE          reduce using rule 24 (values -> values value .)
    LONG            reduce using rule 24 (values -> values value .)
    INTEGER         reduce using rule 24 (values -> values value .)
    STRING          reduce using rule 24 (values -> values value .)
    LBRACE          reduce using rule 24 (values -> values value .)
    LBRACKET        reduce using rule 24 (values -> values value .)


state 35

    (25) values -> values COMMA . value
    (9) value -> . compound
    (10) value -> . list
    (11) value -> . array
    (12) value -> . BOOL
    (13) value -> . BYTE
    (14) value -> . SHORT
    (15) value -> . FLOAT
    (16) value -> . DOUBLE
    (17) value -> . LONG
    (18) value -> . INTEGER
    (19) value -> . STRING
    (2) compound -> . LBRACE key_value_pairs RBRACE
    (3) compound -> . LBRACE RBRACE
    (20) list -> . LBRACKET values RBRACKET
    (21) list -> . LBRACKET RBRACKET
    (22) array -> . LBRACKET TYPE SEMICOLON values RBRACKET
    (23) array -> . LBRACKET TYPE SEMICOLON RBRACKET

    BOOL            shift and go to state 19
    BYTE            shift and go to state 20
    SHORT           shift and go to state 21
    FLOAT           shift and go to state 22
    DOUBLE          shift and go to state 23
    LONG            shift and go to state 24
    INTEGER         shift and go to state 25
    STRING          shift and go to state 26
    LBRACE          shift and go to state 3
    LBRACKET        shift and go to state 27

    value                          shift and go to state 37
    compound                       shift and go to state 16
    list                           shift and go to state 17
    array                          shift and go to state 18

state 36

    (22) array -> LBRACKET TYPE SEMICOLON . values RBRACKET
    (23) array -> LBRACKET TYPE SEMICOLON . RBRACKET
    (24) values -> . values value
    (25) values -> . values COMMA value
    (26) values -> . value
    (9) value -> . compound
    (10) value -> . list
    (11) value -> . array
    (12) value -> . BOOL
    (13) value -> . BYTE
    (14) value -> . SHORT
    (15) value -> . FLOAT
    (16) value -> . DOUBLE
    (17) value -> . LONG
    (18) value -> . INTEGER
    (19) value -> . STRING
    (2) compound -> . LBRACE key_value_pairs RBRACE
    (3) compound -> . LBRACE RBRACE
    (20) list -> . LBRACKET values RBRACKET
    (21) list -> . LBRACKET RBRACKET
    (22) array -> . LBRACKET TYPE SEMICOLON values RBRACKET
    (23) array -> . LBRACKET TYPE SEMICOLON RBRACKET

    RBRACKET        shift and go to state 39
    BOOL            shift and go to state 19
    BYTE            shift and go to state 20
    SHORT           shift and go to state 21
    FLOAT           shift and go to state 22
    DOUBLE          shift and go to state 23
    LONG            shift and go to state 24
    INTEGER         shift and go to state 25
    STRING          shift and go to state 26
    LBRACE          shift and go to state 3
    LBRACKET        shift and go to state 27

    values                         shift and go to state 38
    value                          shift and go to state 32
    compound                       shift and go to state 16
    list                           shift and go to state 17
    array                          shift and go to state 18

state 37

    (25) values -> values COMMA value .

    RBRACKET        reduce using rule 25 (values -> values COMMA value .)
    COMMA           reduce using rule 25 (values -> values COMMA value .)
    BOOL            reduce using rule 25 (values -> values COMMA value .)
    BYTE            reduce using rule 25 (values -> values COMMA value .)
    SHORT           reduce using rule 25 (values -> values COMMA value .)
    FLOAT           reduce using rule 25 (values -> values COMMA value .)
    DOUBLE          reduce using rule 25 (values -> values COMMA value .)
    LONG            reduce using rule 25 (values -> values COMMA value .)
    INTEGER         reduce using rule 25 (values -> values COMMA value .)
    STRING          reduce using rule 25 (values -> values COMMA value .)
    LBRACE          reduce using rule 25 (values -> values COMMA value .)
    LBRACKET        reduce using rule 25 (values -> values COMMA value .)


state 38

    (22) array -> LBRACKET TYPE SEMICOLON values . RBRACKET
    (24) values -> values . value
    (25) values -> values . COMMA value
    (9) value -> . compound
    (10) value -> . list
    (11) value -> . array
    (12) value -> . BOOL
    (13) value -> . BYTE
    (14) value -> . SHORT
    (15) value -> . FLOAT
    (16) value -> . DOUBLE
    (17) value -> . LONG
    (18) value -> . INTEGER
    (19) value -> . STRING
    (2) compound -> . LBRACE key_value_pairs RBRACE
    (3) compound -> . LBRACE RBRACE
    (20) list -> . LBRACKET values RBRACKET
    (21) list -> . LBRACKET RBRACKET
    (22) array -> . LBRACKET TYPE SEMICOLON values RBRACKET
    (23) array -> . LBRACKET TYPE SEMICOLON RBRACKET

    RBRACKET        shift and go to state 40
    COMMA           shift and go to state 35
    BOOL            shift and go to state 19
    BYTE            shift and go to state 20
    SHORT           shift and go to state 21
    FLOAT           shift and go to state 22
    DOUBLE          shift and go to state 23
    LONG            shift and go to state 24
    INTEGER         shift and go to state 25
    STRING          shift and go to state 26
    LBRACE          shift and go to state 3
    LBRACKET        shift and go to state 27

    value                          shift and go to state 34
    compound                       shift and go to state 16
    list                           shift and go to state 17
    array                          shift and go to state 18

state 39

    (23) array -> LBRACKET TYPE SEMICOLON RBRACKET .

    RBRACE          reduce using rule 23 (array -> LBRACKET TYPE SEMICOLON RBRACKET .)
    COMMA           reduce using rule 23 (array -> LBRACKET TYPE SEMICOLON RBRACKET .)
    NAME            reduce using rule 23 (array -> LBRACKET TYPE SEMICOLON RBRACKET .)
    STRING          reduce using rule 23 (array -> LBRACKET TYPE SEMICOLON RBRACKET .)
    RBRACKET        reduce using rule 23 (array -> LBRACKET TYPE SEMICOLON RBRACKET .)
    BOOL            reduce using rule 23 (array -> LBRACKET TYPE SEMICOLON RBRACKET .)
    BYTE            reduce using rule 23 (array -> LBRACKET TYPE SEMICOLON RBRACKET .)
    SHORT           reduce using rule 23 (array -> LBRACKET TYPE SEMICOLON RBRACKET .)
    FLOAT           reduce using rule 23 (array -> LBRACKET TYPE SEMICOLON RBRACKET .)
    DOUBLE          reduce using rule 23 (array -> LBRACKET TYPE SEMICOLON RBRACKET .)
    LONG            reduce using rule 23 (array -> LBRACKET TYPE SEMICOLON RBRACKET .)
    INTEGER         reduce using rule 23 (array -> LBRACKET TYPE SEMICOLON RBRACKET .)
    LBRACE          reduce using rule 23 (array -> LBRACKET TYPE SEMICOLON RBRACKET .)
    LBRACKET        reduce using rule 23 (array -> LBRACKET TYPE SEMICOLON RBRACKET .)


state 40

    (22) array -> LBRACKET TYPE SEMICOLON values RBRACKET .

    RBRACE          reduce using rule 22 (array -> LBRACKET TYPE SEMICOLON values RBRACKET .)
    COMMA           reduce using rule 22 (array -> LBRACKET TYPE SEMICOLON values RBRACKET .)
    NAME            reduce using rule 22 (array -> LBRACKET TYPE SEMICOLON values RBRACKET .)
    STRING          reduce using rule 22 (array -> LBRACKET TYPE SEMICOLON values RBRACKET .)
    RBRACKET        reduce using rule 22 (array -> LBRACKET TYPE SEMICOLON values RBRACKET .)
    BOOL            reduce using rule 22 (array -> LBRACKET TYPE SEMICOLON values RBRACKET .)
    BYTE            reduce using rule 22 (array -> LBRACKET TYPE SEMICOLON values RBRACKET .)
    SHORT           reduce using rule 22 (array -> LBRACKET TYPE SEMICOLON values RBRACKET .)
    FLOAT           reduce using rule 22 (array -> LBRACKET TYPE SEMICOLON values RBRACKET .)
    DOUBLE          reduce using rule 22 (array -> LBRACKET TYPE SEMICOLON values RBRACKET .)
    LONG            reduce using rule 22 (array -> LBRACKET TYPE SEMICOLON values RBRACKET .)
    INTEGER         reduce using rule 22 (array -> LBRACKET TYPE SEMICOLON values RBRACKET .)
    LBRACE          reduce using rule 22 (array -> LBRACKET TYPE SEMICOLON values RBRACKET .)
    LBRACKET        reduce using rule 22 (array -> LBRACKET TYPE SEMICOLON values RBRACKET .)

